## load Xming 
## load R in Ubuntu

library("spatstat")
library(gtools)
library(ggplot2)
library(viridis)
library(directlabels)

theme_set(theme_bw(base_size = 16))

xlim = 150
voxel_size = 0.02
Scale = 1/(voxel_size)
Prob_mov_prog = 0.0083
Voxels_move = 3
Time_step = 21600
Diff = voxel_size/Time_step*Prob_mov_prog*Voxels_move
Rateperday = 0.005
Rate = Rateperday/86400
xref = Diff/Rate
lim = xlim/Scale/xref

ldf <- list() # creates a list
listcsv <- dir(pattern = "*.csv") # creates the list of all the csv files in the directory
listcsv <- mixedsort(sort(listcsv)) 

interval = 1

for (mm in seq(from=1, to=1, by=interval)){
 ldf[[mm]] <- read.csv(listcsv[mm])
	data <- ldf[[mm]]
	

k=mm*4170

CC <- data[data[,"Type"]==1,]
for (i in 70:79){
	if (i==70){
	CC2 <- CC[CC[,"z"]==70,]
	}
	else{
	CC2p <- CC[CC[,"z"]==i,]
	CC2 <- rbind(CC2,CC2p)
	}
}

CCst <- CC[CC[,"State"]==6,]
for (i in 70:79){
	if (i==70){
	CCst2 <- CCst[CCst[,"z"]==70,]
	}
	else{
	CCstp <- CCst[CCst[,"z"]==i,]
	CCst2 <- rbind(CCst2,CCstp)
	}
}

Teff <- data[data[,"Type"]==2,]
for (i in 70:79){
	if (i==70){
	Teff2 <- Teff[Teff[,"z"]==70,]
	}
	else{
	Teffp <- Teff[Teff[,"z"]==i,]
	Teff2 <- rbind(Teff2,Teffp)
	}
}

Treg <- data[data[,"Type"]==3,]
for (i in 70:79){
	if (i==70){
	Treg2 <- Treg[Treg[,"z"]==70,]
	}
	else{
	Tregp <- Treg[Treg[,"z"]==i,]
	Treg2 <- rbind(Treg2,Tregp)
	}
}


CC2$x <- CC2$x/Scale/xref-lim/2
CC2$y <- CC2$y/Scale/xref-lim/2
CCst2$x <- CCst2$x/Scale/xref-lim/2
CCst2$y <- CCst2$y/Scale/xref-lim/2
CCT <- data.frame(CC2$x,CC2$y)
CCTst <- data.frame(CCst2$x,CCst2$y)

  ggplot(CCT, aes(x = CC2.x, y = CC2.y)) +
  	coord_fixed() +
    xlim(-lim/2, lim/2) +
    ylim(-lim/2, lim/2) +
  stat_density_2d(aes(fill = stat(ndensity)), geom = "raster", contour = FALSE,  h = c(0.5,0.5), n = 500) +
 scale_fill_gradient(low="#66FFFF", high="#006666",limits=c(0.005, 1),na.value="transparent", breaks = c(0.001, 0.25, 0.5, 0.75, 1), labels = c("0.00", "0.25", "0.50", "0.75", "1.00")) +
	 labs(
    x = expression(xi['p,x']),
    y = expression(xi['p,y']),
	colour = "Density,"
  ) +
	ggtitle("Cancer cell density")+
  theme(legend.position="top", legend.box="horizontal", title = element_text(size=30), axis.text.y = element_text(size=25), axis.title.y = element_text(size=30), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.title = element_blank(), axis.text.x  = element_blank(), legend.text = element_text(size = 16), legend.key.size = unit(1, 'cm'), legend.key.width = unit(1.1,"cm") ) +
guides(size = guide_legend(title.position="top", title.hjust = 0.5)) +
geom_density_2d(data=CCTst,aes(x=CCst2$x,y=CCst2$y,color = ..level..), size = 0.6) +
scale_color_viridis_c(direction = -1) +
annotate("text", x = -3.5, y = 3.5, label = 'bold("A")', hjust = 0, vjust = 1, parse = TRUE, , size = 10)

 
ggsave(paste0("CCells", k, sep=".", "png"))

Teff2$x <- Teff2$x/Scale/xref-lim/2
Teff2$y <- Teff2$y/Scale/xref-lim/2
CD8 <- data.frame(Teff2$x,Teff2$y)

  ggplot(CD8, aes(x = Teff2.x, y = Teff2.y)) +
  	coord_fixed() +
    xlim(-lim/2, lim/2) +
    ylim(-lim/2, lim/2) +
  stat_density_2d(aes(fill = stat(ndensity)), geom = "raster", contour = FALSE,  h = c(2,2), n = 500) +
 scale_fill_gradient(high = "#330066", low = "#CC99FF", breaks = c(0.001, 0.25, 0.5, 0.75, 1), labels = c("0.00", "0.25", "0.50", "0.75", "1.00")) +
	 labs(
    x = expression(xi['p,x']),
    y = expression(xi['p,y']),
	colour = "Density,"
  ) +
	ggtitle("CD8+ T cell density")+
    theme(legend.position="top", legend.box="horizontal", title = element_text(size=30), axis.text.y = element_blank(), axis.title.y = element_blank(), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.title = element_blank(), axis.text.x  = element_blank(), legend.text = element_text(size = 16), legend.key.size = unit(1, 'cm'), legend.key.width = unit(2,"cm") ) +
guides(size = guide_legend(title.position="top", title.hjust = 0.5)) +
geom_density_2d(size = 0.6, colour = "#660099", linemitre = 1)

ggsave(paste0("CD8Cells", k, sep=".", "png"))

Treg2$x <- Treg2$x/Scale/xref-lim/2
Treg2$y <- Treg2$y/Scale/xref-lim/2
FOX <- data.frame(Treg2$x,Treg2$y) 

  ggplot(FOX, aes(x = Treg2.x, y = Treg2.y)) +
  	coord_fixed() +
    xlim(-lim/2, lim/2) +
    ylim(-lim/2, lim/2) +
    stat_density_2d(aes(fill = stat(ndensity)), geom = "raster", contour = FALSE,  h = c(2,2), n = 500) +
 scale_fill_gradient(high = "#0000FF", low = "#66CCFF", breaks = c(0.001, 0.25, 0.5, 0.75, 1), labels = c("0.00", "0.25", "0.50", "0.75", "1.00")) +
	 labs(
    x = expression(xi['p,x']),
    y = expression(xi['p,y']),
	colour = "Density,"
  ) +
  	ggtitle("FoxP3+ T cell density")+
     theme(legend.position="top", legend.box="horizontal", title = element_text(size=30), axis.text.y = element_blank(), axis.title.y = element_blank(), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.title = element_blank(), axis.text.x  = element_blank(), legend.text = element_text(size = 16), legend.key.size = unit(1, 'cm'), legend.key.width = unit(2,"cm") ) +
guides(size = guide_legend(title.position="top", title.hjust = 0.5)) +
geom_density_2d(size = 0.6, colour = "#000066", linemitre = 1)

ggsave(paste0("FoxCells", k, sep=".", "png"))	

}
